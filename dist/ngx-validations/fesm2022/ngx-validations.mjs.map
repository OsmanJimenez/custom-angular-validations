{"version":3,"file":"ngx-validations.mjs","sources":["../../../projects/ngx-validations/src/lib/ngx-validations.service.ts","../../../projects/ngx-validations/src/public-api.ts","../../../projects/ngx-validations/src/ngx-validations.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgxValidationsService {\r\n  pattern = new RegExp('^[a-zA-ZñÑáéíóúÁÉÍÓÚs ]+$');\r\n  onlyLetters = new RegExp('^[a-zA-ZñÑáéíóúÁÉÍÓÚs ]+$');\r\n  onlyEmail = new RegExp(\r\n    '^[_A-Za-z0-9-\\\\+]+(\\\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\\\.[A-Za-z0-9]+)*(\\\\.[A-Za-z]{2,})$'\r\n  );\r\n  onlyPassword = new RegExp(\r\n    '^(?=.*[a-z])(?=.*[A-Z])(?=.*\\\\d)(?=.*[@,+()-.$!%*?&¡¿#\"´`¨°¬\\':;{}<=>\\\\\\\\~|^/_[\\\\]])[A-Za-z\\\\d@,+()-.$!¿%*?&¡#\"´`¨°¬\\':;{}<=>\\\\\\\\~|^/_[\\\\]]{6,}$'\r\n  );\r\n  onlyNumber = new RegExp(/^([0-9])*$/);\r\n  anyText = new RegExp(\r\n    '^[_A-Za-z0-9-ZñÑáéíóúÁÉÍÓÚs@,+()-.$≥!%*?&/¡¿#\"´`¨°¬\\':;{}<=> ]+$'\r\n  );\r\n  onlyNumbersText = new RegExp('^[A-Za-z0-9ZñÑáéíóúÁÉÍÓÚ]+$');\r\n  minOne = new RegExp(/^([1-9])*$/);\r\n\r\n  constructor() { }\r\n\r\n  Validation(min: number, max: number, option: string, requerid?: boolean) {\r\n    const pattern = {\r\n      onlyLetter: this.onlyLetters,\r\n      onlyEmail: this.onlyEmail,\r\n      onlyPassword: this.onlyPassword,\r\n      onlyNumber: this.onlyNumber,\r\n      minOne: this.minOne,\r\n      onlyNumbersText: this.onlyNumbersText,\r\n      anyText: this.anyText,\r\n    }[option];\r\n\r\n    return (control: AbstractControl): any | null => {\r\n      if (\r\n        requerid == false &&\r\n        control.value != null &&\r\n        control.value.length == 0\r\n      ) {\r\n        return null;\r\n      } else if (control.value != null && control.value.length == 0) {\r\n        return { nameRequerid: true };\r\n      } else if (!pattern) {\r\n        return { invalidPattern: true };\r\n      } else if (!pattern.test(control.value)) {\r\n        return { [option]: true };\r\n      } else if (control.value != null && control.value.length <= min) {\r\n        return { nameNumberMin: true, min };\r\n      } else if (control.value != null && control.value.length >= max) {\r\n        return { nameNumberMax: true, max };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n}\r\n","/*\r\n * Public API Surface of ngx-validations\r\n */\r\n\r\nexport * from './lib/ngx-validations.service';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}